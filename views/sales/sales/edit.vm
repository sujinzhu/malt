#capturefor(head)
<style type="text/css" media="screen">
/* <![CDATA[ */
#header-container { width: 800px; }
#header-container h3, #header-container p { float: left; }
#header-container a { margin-left: 2em; }
#header-container .ui-widget-header th { padding: .3em; }
#entries-container { margin-top: 1em; }
/* ]]> */
</style>

${j.jquery_autocomplete()}
${j.jquery_dataTable()}
${j.jquery_form()}
${j.jquery_validate()}
${j.jquery_editable()}

<script type="text/javascript" language="javascript" charset="utf-8">
// <![CDATA[
  $(function(){
    $('<p></p>').load('${url.for("%{controller='bipsales', action='linktocpo'}")}', {id: "$instance.Id"}).insertAfter('#header-container h3');

    oDataTable = $('#entries').dataTable({
      "bJQueryUI": true,
      "aoColumns": [
      {"bVisible": false},
      {"sClass": "po-id"},
      {"sClass": "product-id"},
      {"sClass": "material-id"},
      {"sClass": "material-name2"},
      {"sClass": "material-name"},
      {"sClass": "quantity carton-quantity"},
      {"sClass": "quantity"},
      {"sClass": "quantity"},
      {"sClass": "quantity"},
      {"sClass": "quantity"},
      {"sClass": "quantity"},
      {"sClass": "short-date required-date"},
      {"sClass": "short-date "},
      {"sClass": "quantity", "fnRender": function(oObj){return fnGetAllocateInventoryLink(oObj.aData[0], oObj.aData[oObj.iDataColumn]);}},
      {"sClass": "quantity"},
      {"sClass": "quantity"},
      {"sClass": "quantity margin"},
      {"sClass": "unit-id"},
      {"sClass": "unit-desc"},
      {"fnRender": function(oObj){return fnGetRemoveLink(oObj.aData[oObj.iDataColumn]);}, "bSortable": false}
      ],
      "fnDrawCallback": function(){fnTrigerRemove('${url.for("%{action='removeentry'}")}', '#entries', '${common.remove}'); fnClassTrigerMaterialMenu();}
    }).width('2000px');

    $('.margin').editable('${url.for("%{action='changemargin'}")}');
    $('.carton-quantity').editable('${url.for("%{action='changecartonquantity'}")}');
    $('.required-date').editable('${url.for("%{action='changerequireddate'}")}',{
      type: 'datepicker',
    });

    $('#new-entry-form').validate({
      submitHandler: function(form){ $(form).ajaxSubmit({dataType: 'json', success: fnAddToDT}); }
    });

    $('#entry_Material_Id').autocomplete('$url.for("%{area='inv', controller='material', action='autocomplete3'}")', {
      width: 550,
      matchContains: true,
      formatItem: formatMaterialItem,
      formatResult: formatResult,
      max: 30
    });
    $('#entry_RequiredDate').datepicker();
    $('#entry_Unit_Id').autocomplete('$url.for("%{area='inv', controller='unit', action='autocomplete2'}")', {
      width: 300,
      matchContains: true,
      formatItem: formatUnitItem,
      formatResult: formatResult
    });

    $('#tradeType').change(function(){
      jQuery.post('${url.for("%{action='changetradetype'}")}', {id: "$instance.Id", tradeType: $("#tradeType").val()});
    });

    $('#header-container p a').button();
    $('#entry_OrderNumber').focus();

    $('#entry_ProductId').focusout(function(){
      jQuery.get('${url.for("%{controller='pnt', action='translate', querystring='customerId=$instance.Customer.Id'}")}', {customerMaterialId: $(this).val(), revision: $('#revision').val()}, function(data){$('#entry_Material_Id').val(data);});
    });
  });

function fnGetAllocateInventoryLink(iId, dAllocatedQuantity){
  var sUrl = '${url.for("%{action='allocatedinventory', querystring='id='}")}' + iId;
  return '<a href="' + sUrl + '">' + dAllocatedQuantity + "</a>";
}

function fnAddToDT(data){
  if(!fnHasError(data)){
    oDataTable.fnAddData([data['Id'], data['OrderNumber'], data['ProductId'], data['MaterialId'], data['MaterialName2'], data['MaterialName'], data['CartonQuantity'], data['Size'], data['BoxQuantity'], data['PiecesQuantity'], data['RequiredQuantity'], data['TotalSize'], data['RequiredDate'], data['OriginalRequiredDate'], data['AllocatedQuantity'], data['PlannedMaterialQuantity'], data['DeliveredQuantity'], data['RemainRequiredQuantity'], data['UnitId'], data['UnitDesc'], '${common.remove}']);
    $('#entry_Material_Id').val("");
    $('#entry_ProductId').val("").focus();
    $('#entry_CartonQuantity').val("1");
    $('#entry_BoxQuantity').val("1");
    $('#entry_PiecesQuantity').val("1");
    $('#entry_Size').val("");
    $('#entry_RequiredQuantity').val("");
  }
}
// ]]>
</script>
#end

#capturefor(title)
${common.salesorder}: ${instance.Id}
#end

<div id="header-container" class="ui-helper-clearfix">
<h3>${common.salesorder}: ${instance.Id}</h3>
<table class="display">
  <tr class="ui-widget-header">
    <th>${common.customer}</th>
    <th></th>
    <th>${common.tradetype}</th>
    <th>${common.is-sample}</th>
    <th>${common.salesman}</th>
    <th>${common.createdate}</th>
    <th>${common.status}</th>
  </tr>
  <tr class="ui-widget-content">
    <td>$!{instance.Customer.Id}</td>
    <td>$!{instance.Customer.Name}</td>
    <td>${h.getenumname($instance.TradeType)}</td>
    <td>${instance.IsSample}</td>
    <td>$!{instance.SalesMan}</td>
    <td>$!{instance.CreatedDate.ToShortDateString()}</td>
    <td>${h.getenumname($instance.Status)}</td>
  </tr>
</table>
</div>

<div id="new-entry-container">
${h.start_with_layout($url.for("%{action='createentry'}"), "new-entry-form")}

${f.installscripts()}
$f.hiddenfield("revision", "A")
${f.push("entry")}

${f.hiddenfield("SO.Id")}
${h.field($common.po-id, $f.textfield('OrderNumber', "%{class='required'}"), true)}
${h.field($common.product-id, $f.textfield('ProductId'))}
${h.field($common.materialid, $f.textfield('Material.Id', "%{class='required'}"), true)}
${h.field($common.carton-quantity, $f.numberfield('CartonQuantity', "%{class='required', min='0.00000000001'}"), true)}
${h.field($common.requireddate, $f.textfield('RequiredDate', "%{class='required'}"), true)}
${h.field($common.baseunit, $f.textfield('Unit.Id', "%{class='required'}"), true)}
${h.field($common.notice, $f.textfield('Notice'))}
${h.field("", $f.submit("$common.create"))}

${f.pop()}

${h.end_with_layout()}
</div>

<div id="entries-container">
<table id="entries" class="display">
  <thead>
    <tr>
      <th>Id</th>
      <th>${common.po-id}</th>
      <th>${common.product-id}</th>
      <th>${common.materialid}</th>
      <th></th>
      <th></th>
      <th>${common.carton-quantity}</th>
      <th>${common.size}</th>
      <th>${common.box-quantity}</th>
      <th>${common.pieces-quantity}</th>
      <th>${common.requiredquantity}</th>
      <th>${common.total-size}</th>
      <th>${common.requireddate}</th>
      <th>${common.original-required-date}</th>
      <th>${common.allocatedquantity}</th>
      <th>${common.plannedmaterialquantity}</th>
      <th>${common.deliveredquantity}</th>
      <th>${common.ordermargin}</th>
      <th>${common.baseunit}</th>
      <th></th>
      <th></th>
    </tr>
  </thead>
  <tbody>
  #foreach($entry in $instance.Entries)
    <tr>
      <td>${entry.Id}</td>
      <td>${entry.OrderNumber}</td>
      <td>$!{entry.ProductId}</td>
      <td>${entry.Material.Id}</td>
      <td>$!{entry.Material.Name2}</td>
      <td>$!{entry.Material.Name}</td>
      <td id="carton${entry.Id}">${entry.CartonQuantity}</td>
      <td>${entry.Size}</td>
      <td>${entry.BoxQuantity}</td>
      <td>${entry.PiecesQuantity}</td>
      <td>${entry.RequiredQuantity}</td>
      <td>${entry.TotalSize}</td>
      <td id="date${entry.Id}">${entry.RequiredDate.ToShortDateString()}</td>
      <td>${entry.OriginalRequiredDate.ToShortDateString()}</td>
      <td>${entry.AllocatedQuantity}</td>
      <td>${entry.PlannedMaterialQuantity}</td>
      <td>${entry.DeliveredQuantity}</td>
      <td id="quantity${entry.Id}">${entry.RemainRequiredQuantity}</td>
      <td>${entry.Unit.Id}</td>
      <td>$!{entry.Unit.Description}</td>
      <td>${common.remove}</td>
    </tr>
  #end
  </tbody>
</table>
</div>
